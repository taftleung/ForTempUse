swagger: '2.0'
info:
  title: Payments API
  version: v0.12
host: sandbox.api.payme.hsbc.com.hk
basePath: /payments
schemes:
  - https
securityDefinitions:
  oauth2Provider:
    type: oauth2
    scopes: {}
    flow: application
    tokenUrl: 'https://login.microsoftonline.com/c48c0cef-3c2d-4647-976f-b82e84b8be37/oauth2/token'
security:
  - oauth2Provider: []
paths:
  '/transactions/{transactionId}/refunds':
    post:
      description: Use this Payments API to create refund of previously created HSBC PayMe transaction.
      operationId: postRefund
      summary: refund
      tags:
        - refund
      parameters:
        - $ref: '#/parameters/Api-Version-Header'
        - $ref: '#/parameters/Accept-Header'
        - $ref: '#/parameters/Content-Type-Header'
        - $ref: '#/parameters/Authorization-Header'
        - $ref: '#/parameters/Trace-Id-Header'
        - $ref: '#/parameters/Digest-Header'
        - $ref: '#/parameters/Signature-Header'
        - $ref: '#/parameters/Request-Date-Time-Header'
        - $ref: '#/parameters/TransactionId-Path'
        - name: RefundInputModel
          in: body
          schema:
            $ref: '#/definitions/RefundInputModel'
          description: Refund Request Data
      consumes:
        - application/json
      responses:
        '201':
          description: Created - Refund Successful Response.
          headers:
            Content-Type:
              type: string
              description: It indicates the media type of the resource. It`s value will be "application/json"
            Signature:
              type: string
              description: 'The Signature header is a calculated list of value as defined by the [draft-cavage-http-signatures-10](https://tools.ietf.org/id/draft-cavage-http-signatures-10.html) standard. <br>Format: `Signature: keyId="${keyId}",algorithm="${algorithm}",headers="${headers}",signature="${signature}"` <br> <br><b>keyid</b> is the Signing Key Id that is shared with client. It is used to sign the message. Format: `keyId="UUID"` <br><b>algorithm</b> currently supported is `hmac-sha256`. Value: `algorithm="hmac-sha256"` <br><b>headers</b> is the list of headers. Value: `headers="(request-target) digest"` <br>*digest is only required if there is a request body* <br><b>signature</b> is digitally sign data using the algorithm, secret key Id and headers list.'
            Digest:
              type: string
              description: 'The Digest header is a calculated by Base64 encoding of Hash value of the message body. <br>Example: `Digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=`'
          schema:
            $ref: '#/definitions/RefundOutputModel'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorised'
        '500':
          $ref: '#/responses/ServerError'
      produces:
        - application/json
  /transactions:
    get:
      description: Use this Payments API to retrieve transactions by time range. This API supports pagination.
      operationId: getTransactions
      summary: List transactions
      tags:
        - transactions
      parameters:
        - $ref: '#/parameters/Api-Version-Header'
        - $ref: '#/parameters/Accept-Header'
        - $ref: '#/parameters/Content-Type-Header'
        - $ref: '#/parameters/Authorization-Header'
        - $ref: '#/parameters/Trace-Id-Header'
        - $ref: '#/parameters/Signature-Header'
        - $ref: '#/parameters/Request-Date-Time-Header'
        - $ref: '#/parameters/Accept-Language-Header'
        - name: from
          type: string
          in: query
          description: 'The start time of the transactions range. Datetime format is in RFC3339. Example\: \"2018-08-02T20:17:46.384Z\"'
          required: false
        - name: to
          type: string
          in: query
          description: 'The end time of the transactions range. Datetime format is in RFC3339. Example\: \"2018-08-02T20:17:46.384Z\"'
          required: false
        - name: startingAfter
          type: string
          in: query
          description: 'The last Transaction Id of the previous page. Example: 123e4567-e89b-12d3-a456-426655440000'
          required: false
          pattern: '([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}){1}'
          format: uuid
        - name: limit
          type: number
          in: query
          description: Number of transactions to be returned.
          required: false
      consumes:
        - application/json
      responses:
        '200':
          description: Request successful and returns zero or more transactions
          headers:
            Content-Type:
              type: string
              description: It indicates the media type of the resource. It`s value will be "application/json"
            Signature:
              type: string
              description: 'The Signature header is a calculated list of value as defined by the [draft-cavage-http-signatures-10](https://tools.ietf.org/id/draft-cavage-http-signatures-10.html) standard. <br>Format: `Signature: keyId="${keyId}",algorithm="${algorithm}",headers="${headers}",signature="${signature}"` <br> <br><b>keyid</b> is the Signing Key Id that is shared with client. It is used to sign the message. Format: `keyId="UUID"` <br><b>algorithm</b> currently supported is `hmac-sha256`. Value: `algorithm="hmac-sha256"` <br><b>headers</b> is the list of headers. Value: `headers="(request-target) digest"` <br>*digest is only required if there is a request body* <br><b>signature</b> is digitally sign data using the algorithm, secret key Id and headers list.'
            Digest:
              type: string
              description: 'The Digest header is a calculated by Base64 encoding of Hash value of the message body. <br>Example: `Digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=`'
          schema:
            $ref: '#/definitions/ListTransactionModel'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorised'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
      produces:
        - application/json
  '/transactions/{transactionId}':
    get:
      description: Use this Payments API to retrieve the information about previously created HSBC PayMe transaction by a transaction id.
      operationId: getTransactionDetail
      summary: transaction detail
      tags:
        - transactions
      parameters:
        - $ref: '#/parameters/Api-Version-Header'
        - $ref: '#/parameters/Accept-Header'
        - $ref: '#/parameters/Content-Type-Header'
        - $ref: '#/parameters/Authorization-Header'
        - $ref: '#/parameters/Trace-Id-Header'
        - $ref: '#/parameters/Digest-Header'
        - $ref: '#/parameters/Signature-Header'
        - $ref: '#/parameters/Request-Date-Time-Header'
        - $ref: '#/parameters/TransactionId-Path'
      consumes:
        - application/json
      responses:
        '200':
          description: Successful response for Get transaction Id.
          headers:
            Content-Type:
              type: string
              description: It indicates the media type of the resource. It`s value will be "application/json"
            Signature:
              type: string
              description: 'The Signature header is a calculated list of value as defined by the [draft-cavage-http-signatures-10](https://tools.ietf.org/id/draft-cavage-http-signatures-10.html) standard. <br>Format: `Signature: keyId="${keyId}",algorithm="${algorithm}",headers="${headers}",signature="${signature}"` <br> <br><b>keyid</b> is the Signing Key Id that is shared with client. It is used to sign the message. Format: `keyId="UUID"` <br><b>algorithm</b> currently supported is `hmac-sha256`. Value: `algorithm="hmac-sha256"` <br><b>headers</b> is the list of headers. Value: `headers="(request-target) digest"` <br>*digest is only required if there is a request body* <br><b>signature</b> is digitally sign data using the algorithm, secret key Id and headers list.'
            Digest:
              type: string
              description: 'The Digest header is a calculated by Base64 encoding of Hash value of the message body. <br>Example: `Digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=`'
          schema:
            $ref: '#/definitions/ListTransactionModel'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorised'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
      produces:
        - application/json
  /paymentrequests:
    post:
      description: Use this Payments API to create a PayMe payment request.
      operationId: createPaymentRequest
      summary: createPaymentRequest
      tags:
        - paymentrequests
      parameters:
        - $ref: '#/parameters/Api-Version-Header'
        - $ref: '#/parameters/Accept-Header'
        - $ref: '#/parameters/Content-Type-Header'
        - $ref: '#/parameters/Authorization-Header'
        - $ref: '#/parameters/Trace-Id-Header'
        - $ref: '#/parameters/Digest-Header'
        - $ref: '#/parameters/Signature-Header'
        - $ref: '#/parameters/Request-Date-Time-Header'
        - name: PaymentRequestInputModel
          in: body
          schema:
            $ref: '#/definitions/PaymentRequestInputModel'
          description: PaymentRequest Request Data
      consumes:
        - application/json
      responses:
        '201':
          $ref: '#/responses/PostPaymentrequests'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorised'
        '500':
          $ref: '#/responses/ServerError'
      produces:
        - application/json
  '/paymentrequests/{paymentRequestId}':
    get:
      description: 'A synchronous http request which will only return a response when either the specified status has been reached, or can no longer be reached, or the specified timeout in seconds has elapsed. It is expected that this endpoint may be called multiple times within the lifecycle of a payment.'
      operationId: getPaymentRequest
      summary: getPaymentRequest
      tags:
        - paymentrequests
      parameters:
        - $ref: '#/parameters/Api-Version-Header'
        - $ref: '#/parameters/Accept-Header'
        - $ref: '#/parameters/Content-Type-Header'
        - $ref: '#/parameters/Authorization-Header'
        - $ref: '#/parameters/Trace-Id-Header'
        - $ref: '#/parameters/Signature-Header'
        - $ref: '#/parameters/Request-Date-Time-Header'
        - $ref: '#/parameters/PaymentRequestId-Path'
      responses:
        '200':
          $ref: '#/responses/GetPaymentrequest'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorised'
        '500':
          $ref: '#/responses/ServerError'
      produces:
        - application/json
  '/paymentrequests/{paymentRequestId}/cancel':
    put:
      description: Use this Payments API to cancel the existing Active payment request
      operationId: cancelPaymentRequest
      summary: cancelPaymentRequest
      tags:
        - paymentrequests
      parameters:
        - $ref: '#/parameters/Api-Version-Header'
        - $ref: '#/parameters/Accept-Header'
        - $ref: '#/parameters/Content-Type-Header'
        - $ref: '#/parameters/Authorization-Header'
        - $ref: '#/parameters/Trace-Id-Header'
        - $ref: '#/parameters/Signature-Header'
        - $ref: '#/parameters/Request-Date-Time-Header'
        - $ref: '#/parameters/PaymentRequestId-Path'
      consumes:
        - application/json
      responses:
        '200':
          description: Request successful and payment request has been successfully canceled.
          headers:
            Content-Type:
              type: string
              description: It indicates the media type of the resource. It`s value will be "application/json"
            Signature:
              type: string
              description: 'The Signature header is a calculated list of value as defined by the [draft-cavage-http-signatures-10](https://tools.ietf.org/id/draft-cavage-http-signatures-10.html) standard. <br>Format: `Signature: keyId="${keyId}",algorithm="${algorithm}",headers="${headers}",signature="${signature}"` <br> <br><b>keyid</b> is the Signing Key Id that is shared with client. It is used to sign the message. Format: `keyId="UUID"` <br><b>algorithm</b> currently supported is `hmac-sha256`. Value: `algorithm="hmac-sha256"` <br><b>headers</b> is the list of headers. Value: `headers="(request-target) digest"` <br>*digest is only required if there is a request body* <br><b>signature</b> is digitally sign data using the algorithm, secret key Id and headers list.'
            Digest:
              type: string
              description: 'The Digest header is a calculated by Base64 encoding of Hash value of the message body. <br>Example: `Digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=`'
          schema:
            $ref: '#/definitions/CancelPaymentRequestOutputModel'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorised'
        '500':
          $ref: '#/responses/ServerError'
      produces:
        - application/json
responses:
  BadRequest:
    description: The request sent to the server is not in correct format or is missing mandatory parameter. Bad Request.
    schema:
      $ref: '#/definitions/ErrorModel'
    examples:
      application/json: |-
        {
          "message": "Service Request Validation Failed",
          "errors": [
            {
              "errorCode": "EA002",
              "errorDescription": "Header TraceId was not found in the request. Access denied."
            }
          ]
        }
  Unauthorised:
    description: The request sent to the server is not authorised to access the requested resource. Unauthorised.
    schema:
      $ref: '#/definitions/ErrorModel'
    examples:
      application/json: |-
        {
          "message": "Service Request Authentication Failed",
          "errors": [
            {
              "errorCode": "EA001",
              "errorDescription": "JWT not present."
            }
          ]
        }
  NotFound:
    description: The resource for which the request has been sent to the server is not available. Not Found
    schema:
      $ref: '#/definitions/ErrorModel'
    examples:
      application/json: |-
        {
          "message": "Unable to Find Resources During Service Request",
          "errors": [
            {
              "errorCode": "EA010",
              "errorDescription": "Unable to Find Resources During Service Request"
            }
          ]
        }
  Conflict:
    description: Conflict
    schema:
      $ref: '#/definitions/ErrorModel'
    examples:
      application/json: |-
        {
          "message": "Unable to Find Resources During Service Request",
          "errors": [
            {
              "errorCode": "EA010",
              "errorDescription":    "Unable to Find Resources During Service Request"
            }
          ]
        }
  ServerError:
    description: The server is in error state. Unexpected Error
    schema:
      $ref: '#/definitions/ErrorModel'
    examples:
      application/json: |
        {
          "message": "Service Request Execution Failed",
          "errors": [
            {
              "errorCode": "EA003",
              "errorDescription": "Internal Server Error"
            }
          ]
        }
  PostPaymentrequests:
    description: Payment request successful response.
    headers:
      Signature:
        type: string
        description: 'The Signature header is a calculated list of value as defined by the [draft-cavage-http-signatures-10](https://tools.ietf.org/id/draft-cavage-http-signatures-10.html) standard. <br>Format: `Signature: keyId="${keyId}",algorithm="${algorithm}",headers="${headers}",signature="${signature}"` <br> <br><b>keyid</b> is the Signing Key Id that is shared with client. It is used to sign the message. Format: `keyId="UUID"` <br><b>algorithm</b> currently supported is `hmac-sha256`. Value: `algorithm="hmac-sha256"` <br><b>headers</b> is the list of headers. Value: `headers="(request-target) digest"` <br>*digest is only required if there is a request body* <br><b>signature</b> is digitally sign data using the algorithm, secret key Id and headers list.'
      Digest:
        type: string
        description: 'The Digest header is a calculated by Base64 encoding of Hash value of the message body. <br>Example: `Digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=`'
    schema:
      $ref: '#/definitions/PostPaymentRequestOutputModel'
    examples:
      application/json:
        paymentRequestId: 7cade371-6911-4bd1-bd1b-a7c46fbc1df8
        totalAmount: 2000
        currencyCode: HKD
        notificationUri: 'https://example.com/return'
        appSuccessCallback: 'https://example.com/confirmation'
        appFailCallback: 'https://example.com/unsuccessful'
        createdTime: '2018-11-07T15:56:11Z'
        effectiveDuration: 30
        webLink: 'https://example.payme.com/2/GPxtpph8seSt9naxvKiXps'
        appLink: 'payme://?id=GPxtpph8seSt9naxvKiXps'
        statusDescription: Request for Payment Initiated
        statusCode: PR001
        businessLogos:
          tiny: 'https://sacctsithkpeakbp.blob.core.windows.net/onboarding/2f7f441ca16e111b8c6960819ed22d66c2404e5db05613cb3bcd8f096e2ded7d/businessLogo_40x40.png'
          small: 'https://sacctsithkpeakbp.blob.core.windows.net/onboarding/2f7f441ca16e111b8c6960819ed22d66c2404e5db05613cb3bcd8f096e2ded7d/businessLogo_60x60.png'
          normal: 'https://sacctsithkpeakbp.blob.core.windows.net/onboarding/2f7f441ca16e111b8c6960819ed22d66c2404e5db05613cb3bcd8f096e2ded7d/businessLogo_300x300.png'
          large: 'https://sacctsithkpeakbp.blob.core.windows.net/onboarding/2f7f441ca16e111b8c6960819ed22d66c2404e5db05613cb3bcd8f096e2ded7d/businessLogo_600x600.png'
          full: 'https://sacctsithkpeakbp.blob.core.windows.net/onboarding/2f7f441ca16e111b8c6960819ed22d66c2404e5db05613cb3bcd8f096e2ded7d/businessLogo.png'
  GetPaymentrequest:
    description: Successful Response.
    headers:
      Signature:
        type: string
        description: 'The Signature header is a calculated list of value as defined by the [draft-cavage-http-signatures-10](https://tools.ietf.org/id/draft-cavage-http-signatures-10.html) standard. <br>Format: `Signature: keyId="${keyId}",algorithm="${algorithm}",headers="${headers}",signature="${signature}"` <br> <br><b>keyid</b> is the Signing Key Id that is shared with client. It is used to sign the message. Format: `keyId="UUID"` <br><b>algorithm</b> currently supported is `hmac-sha256`. Value: `algorithm="hmac-sha256"` <br><b>headers</b> is the list of headers. Value: `headers="(request-target) digest"` <br>*digest is only required if there is a request body* <br><b>signature</b> is digitally sign data using the algorithm, secret key Id and headers list.'
      Digest:
        type: string
        description: 'The Digest header is a calculated by Base64 encoding of Hash value of the message body. <br>Example: `Digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=`'
    schema:
      $ref: '#/definitions/GetPaymentRequestOutputModel'
    examples:
      application/json:
        paymentRequestId: 1f0e8bb9-6a75-422a-9533-e5b991fc235c6
        totalAmount: 120
        currencyCode: HKD
        appSuccessCallback: 'https://example.com/confirmation'
        appFailCallback: 'https://example.com/unsuccessful'
        createdTime: '2018-07-25T02:26:07Z'
        effectiveDuration: 60
        statusDescription: Request for Payment Initiated
        statusCode: PR001
parameters:
  Api-Version-Header:
    type: string
    name: Api-Version
    in: header
    description: It routes to a specific version of the API.
    required: true
  Accept-Header:
    type: string
    name: Accept
    in: header
    description: Only acceptable value is "application/json".
    required: true
    enum:
      - application/json
  Content-Type-Header:
    type: string
    name: Content-Type
    in: header
    description: Only acceptable value is "application/json".
    required: true
    enum:
      - application/json
  Trace-Id-Header:
    type: string
    name: Trace-Id
    in: header
    description: Trace-Id header for correlating logs and request across services.
    required: true
    pattern: '([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}){1}'
    format: uuid
  Authorization-Header:
    type: string
    name: Authorization
    in: header
    description: 'Bearer token required for accessing the API. <br> Format: `Authorization: Bearer ${TOKEN}`'
    required: true
  X-HSBC-Device-Id-Header:
    type: string
    name: X-HSBC-Device-Id
    in: header
    description: X-HSBC-Device-Id is mandatory only for POS
  X-HSBC-Merchant-Id-Header:
    type: string
    name: X-HSBC-Merchant-Id
    in: header
    description: X-HSBC-Merchant-Id is the merchant Id
    format: uuid
  Digest-Header:
    type: string
    name: Digest
    in: header
    description: 'The Digest header is a calculated by Base64 encoding of Hash value of the message body. <br>Example: `Digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=`'
    required: true
  Signature-Header:
    type: string
    name: Signature
    in: header
    description: 'The Signature header is a calculated list of value as defined by the [draft-cavage-http-signatures-10](https://tools.ietf.org/id/draft-cavage-http-signatures-10.html) standard. <br>Format: `Signature: keyId="${keyId}",algorithm="${algorithm}",headers="${headers}",signature="${signature}"` <br> <br><b>keyid</b> is the Signing Key Id that is shared with client. It is used to sign the message. Format: `keyId="UUID"` <br><b>algorithm</b> currently supported is `hmac-sha256`. Value: `algorithm="hmac-sha256"` <br><b>headers</b> is the list of headers. Value: `headers="(request-target) request-date-time trace-id authorization api-version digest"` <br>*digest is only required if there is a request body* <br><b>signature</b> is digitally sign data using the algorithm, secret key Id and headers list.'
    required: true
  KeyId-Path:
    type: string
    name: keyId
    in: path
    description: The entityId of the key being requested.
    required: true
    format: uuid
    pattern: '([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}){1}'
  TransactionId-Path:
    type: string
    name: transactionId
    in: path
    description: Unique identifier generated by PayMe to for each transaction.
    required: true
    pattern: '([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}){1}'
    format: uuid
  PaymentRequestId-Path:
    type: string
    name: paymentRequestId
    in: path
    required: true
    description: Unique PayMe identifier for a payment being requested.
    pattern: '([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}){1}'
    format: uuid
  Request-Date-Time-Header:
    name: Request-Date-Time
    in: header
    description: 'Format - date-time (as date-time in RFC3339). The timestamp of when the payment request was created in UTC. This will be used for checking for duplicate requests and replay attacks. Example\: \"2018-08-02T20:17:46.384Z\"'
    required: true
    format: date-time
    type: string
  Accept-Language-Header:
    name: Accept-Language
    in: header
    description: 'The Accept-Language request HTTP header advertises which languages the client is able to understand, and which locale variant is preferred. See available values for supported languages.'
    type: string
    enum:
      - en_US
definitions:
  BankAccountModel:
    title: BankAccountModel
    type: object
    properties:
      bankCode:
        type: string
        description: Bank code
      accountNumber:
        type: string
        description: Bank account number
      accountCountry:
        type: string
        description: Account country
      accountCurrency:
        type: string
        minLength: 3
        maxLength: 3
        description: Account currency code. ISO 4217 codes for the representation of currencies and funds.
        example: HKD
  ShoppingCartDataModel:
    type: object
    properties:
      sku:
        type: string
        maxLength: 200
        description: Stock keeping unit (SKU) of the item.
        example: pizzapepperoni
      name:
        type: string
        maxLength: 200
        description: Name of the item being purchased.
        example: pepperoni pizza
      quantity:
        type: integer
        minimum: 0
        maximum: 9999
        description: Quantity of the item being purchased.
        example: 1
      price:
        type: number
        multipleOf: 0.01
        minimum: 0.01
        maximum: 1000000
        description: Price of the item being purchased.
        example: 60
      currencyCode:
        type: string
        minLength: 3
        maxLength: 3
        description: 'Currency used to purchase the item. ISO 4217 codes for the representation of currencies and funds. The default will be the currency associated with the totalAmount, unless merchant specifies.'
        example: HKD
        enum:
          - HKD
      category1:
        type: string
        maxLength: 200
        description: This represents the first level of categorisation for your items.
        example: Pizza
      category2:
        type: string
        maxLength: 200
        description: This represents the second level of categorisation for your items.
        example: Meat Pizza
      category3:
        type: string
        maxLength: 200
        description: This represents the third level of categorisation for your items.
        example: BBQ Chicken Pizza
  MerchantDataModel:
    type: object
    properties:
      orderDescription:
        type: string
        maxLength: 200
        description: This field will allow the merchant to populate any additional details related to the payment request. Max 200 characters.
        example: Payment for invoice 123XYZ on Customer Account ABC.
      additionalData:
        type: string
        maxLength: 1024
        description: This field will allow the merchant to populate any additional details related to the items being purchased. Max 1024 characters.
        example: pepperoni pizza
      orderId:
        type: string
        maxLength: 200
        description: Id of the invoice related to the transaction specified by the merchant.  This can be be used by the merchant for reconciliation.
        example: B12421832
      shoppingCart:
        type: array
        items:
          $ref: '#/definitions/ShoppingCartDataModel'
  PaymentRequestInputModel:
    type: object
    required:
      - totalAmount
      - currencyCode
    properties:
      totalAmount:
        type: number
        multipleOf: 0.01
        minimum: 0.01
        maximum: 1000000
        description: Total amount for the transaction.
        example: 120
      currencyCode:
        type: string
        description: Currency used to purchase the item. ISO 4217 codes for the representation of currencies and funds.
        example: HKD
        minLength: 3
        maxLength: 3
        enum:
          - HKD
      notificationUri:
        type: string
        maxLength: 255
        description: 'This specifies the dynamic notification URL that will be use to inform  the merchant that the payment transaction has been completed. If not populated, the caller will not receive a payment completion callback.'
        example: 'https://example.com/return'
      appSuccessCallback:
        type: string
        maxLength: 255
        description: 'If applicable, URL that the user will be redirected to when payment finishes successfully. The domain used must match the domain of the sending server.'
        example: 'https://example.com/confirmation'
      appFailCallback:
        type: string
        maxLength: 255
        description: 'If applicable, URL that the user will be redirected to when the payment fails. The domain used must match the domain of the sending server.'
        example: 'https://example.com/unsuccessful'
      effectiveDuration:
        type: integer
        minimum: 15
        maximum: 3600
        description: Expiry value in seconds of the payment request. Defaults to 600 seconds.
        example: 30
      merchantData:
        $ref: '#/definitions/MerchantDataModel'
  PostPaymentRequestOutputModel:
    type: object
    required:
      - paymentRequestId
      - totalAmount
      - currencyCode
      - createdTime
      - effectiveDuration
      - webLink
      - statusDescription
      - statusCode
    properties:
      paymentRequestId:
        type: string
        description: Unique identifier for the Payment entry. This can be used subsequent calls like get payment request.
        example: 1f0e8bb9-6a75-422a-9533-e5b991fc235c
        pattern: '([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}){1}'
        format: uuid
      totalAmount:
        type: number
        multipleOf: 0.01
        minimum: 0.01
        maximum: 1000000
        description: Total amount for the Transaction.
        example: 120
      currencyCode:
        type: string
        minLength: 3
        maxLength: 3
        description: Currency used to purchase the item. ISO 4217 codes for the representation of currencies and funds.
        enum:
          - HKD
        example: HKD
      notificationUri:
        type: string
        maxLength: 255
        description: 'This specifies the dynamic notification URL that will be use to inform  the merchant that the payment transaction has been completed. If not populated, the caller will not receive a payment completion callback.'
        example: 'https://example.com/return'
      appSuccessCallback:
        type: string
        maxLength: 255
        description: 'If applicable, URL that the user will be redirected to when payment finishes successfully.'
        example: 'https://example.com/confirmation'
      appFailCallback:
        type: string
        maxLength: 255
        description: 'If applicable, URL that the user will be redirected to when the payment fails.'
        example: 'https://example.com/unsuccessful'
      createdTime:
        type: string
        format: date-time
        description: Date and time when the request is created.
        example: '2018-07-25T02:26:07Z'
      effectiveDuration:
        type: integer
        minimum: 15
        maximum: 3600
        description: Expiry value in seconds of the payment request.
        example: 30
      webLink:
        type: string
        maxLength: 1024
        description: Uniform Resource Identifier that can be used to generate a PayCode with which customer can effect payment via PayMe app.
        example: 'https://qr.payme.hsbc.com.hk/2/Hw6LuWp1QiqVM-W5kfwjXA'
      appLink:
        type: string
        description: 'DEPRECATED - will be removed in a future release : Uniform Resource Identifier that can be used to link directly  to the PayMe app so that customer can effect payment.'
        example: 'payme://?id=Hw6LuWp1QiqVM-W5kfwjXA'
      statusDescription:
        type: string
        maxLength: 1024
        description: Payment request status.
        example: Payment Success
        enum:
          - Request for Payment Initiated
          - Payment Success
          - Payment Request Expired
      statusCode:
        type: string
        description: 'Status code depicting the status returned. (PR001 = Active, PR005 = Completed, PR007 = Expired)'
        example: PR005
        enum:
          - PR001
          - PR005
          - PR007
      businessLogos:
        $ref: '#/definitions/BusinessLogos'
  BusinessLogos:
    type: object
    properties:
      tiny:
        type: string
        description: 40x40 size of logo
        example: 'https://sacctsithkpeakbp.blob.core.windows.net/onboarding/2f7f441ca16e111b8c6960819ed22d66c2404e5db05613cb3bcd8f096e2ded7d/businessLogo_40x40.png'
      small:
        type: string
        description: 60x60 size of logo
        example: 'https://sacctsithkpeakbp.blob.core.windows.net/onboarding/2f7f441ca16e111b8c6960819ed22d66c2404e5db05613cb3bcd8f096e2ded7d/businessLogo_60x60.png'
      normal:
        type: string
        description: 300x300 size of logo
        example: 'https://sacctsithkpeakbp.blob.core.windows.net/onboarding/2f7f441ca16e111b8c6960819ed22d66c2404e5db05613cb3bcd8f096e2ded7d/businessLogo_300x300.png'
      large:
        type: string
        description: 600x600 size of logo
        example: 'https://sacctsithkpeakbp.blob.core.windows.net/onboarding/2f7f441ca16e111b8c6960819ed22d66c2404e5db05613cb3bcd8f096e2ded7d/businessLogo_600x600.png'
      full:
        type: string
        description: original size of logo
        example: 'https://sacctsithkpeakbp.blob.core.windows.net/onboarding/2f7f441ca16e111b8c6960819ed22d66c2404e5db05613cb3bcd8f096e2ded7d/businessLogo.png'
  TransactionModel:
    type: object
    required:
      - transactionId
      - transactionType
      - transactionAmount
      - transactionCurrencyCode
      - statusCode
    properties:
      transactionId:
        type: string
        description: Unique identifier generated by PayMe to for each transaction.
        pattern: '([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}){1}'
        format: uuid
      payerId:
        type: string
        maxLength: 22
        minLength: 22
        description: The id of the PayMe customer who is paying for the goods.
        example: CA1234765
      transactionSourceDescription:
        type: string
        maxLength: 20
        description: 'Code description for source of the transaction. <br>"005": "Online"'
        example: Online
      transactionSource:
        type: string
        maxLength: 3
        description: 'Code for source of the transaction. <br>"005": "Online"'
        example: '005'
      transactionTypeDescription:
        type: string
        maxLength: 20
        description: 'Description of transaction type: <br/> "003" : "Collect payment" <br/> "004" : "Refund" <br/> "006" : "Bank Transfer" <br/> "014" : "Adjustment"'
        example: Refund
      transactionType:
        type: string
        maxLength: 3
        description: 'Code of transaction type: <br/> "003": "Collect payment" <br/> "004": "Refund" <br/> "006": "Bank Transfer" <br/> "014": "Adjustment"'
        example: '004'
      transactionTime:
        type: string
        description: Timestamp of the transaction. Format is date-time in RFC3339.
        format: date-time
        example: '2018-08-02T20:17:46.384Z'
      transactionAmount:
        type: number
        multipleOf: 0.01
        minimum: 0.01
        maximum: 1000000
        description: Amount for which transaction will be created.
        example: 120.03
      transactionCurrencyCode:
        type: string
        minLength: 3
        maxLength: 3
        description: Transaction currency code. ISO 4217 codes for the representation of currencies and funds.
        example: HKD
      feeAmount:
        type: number
        multipleOf: 0.01
        minimum: 0.01
        maximum: 1000000
        description: Fee amount levied on the transaction.
        example: 1.03
      feeCurrencyCode:
        type: string
        maxLength: 3
        description: Fee currency code. ISO 4217 codes for the representation of currencies and funds
        example: HKD
      statusDescription:
        type: string
        description: 'Transaction status description: <br/> "001": "Success" <br/> "002": "Failure" <br/> "003": "Submitted"'
        example: Success
      statusCode:
        type: string
        maxLength: 3
        description: 'Transaction status code: <br/> "001": "Success" <br/> "002": "Failure" <br/> "003": "Submitted"'
        example: '001'
      payerName:
        type: string
        maxLength: 201
        description: The name of the PayMe customer who is paying for the goods.
        example: Will Smith
      orderDescription:
        type: string
        maxLength: 140
        description: 'Order description, associated with the transaction.'
        example: Payment for invoice 123XYZ on Customer Account ABC.
      orderId:
        type: string
        maxLength: 60
        description: Order id generated in the Merchant System.
        example: B12421832
      refundable:
        type: boolean
        description: 'Flag, indicating weather transaction is refundable. Possible values: true,false'
        example: false
      reasonCode:
        type: string
        maxLength: 2
        description: Reason for refund.
        example: '01'
  ListTransactionModel:
    type: object
    required:
      - transactions
    properties:
      transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionModel'
      listDate:
        type: string
        description: Timestamp when the transaction list is retrieved. Format is date-time in RFC3339.
        format: date-time
        example: '2018-08-02T20:17:46.384Z'
  GetPaymentRequestOutputModel:
    type: object
    required:
      - paymentRequestId
      - totalAmount
      - currencyCode
      - createdTime
      - statusDescription
      - statusCode
    properties:
      paymentRequestId:
        type: string
        description: Unique identifier for the Payment entry. This can be used subsequent calls like get payment request.
        example: 1f0e8bb9-6a75-422a-9533-e5b991fc235c
        pattern: '([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}){1}'
        format: uuid
      totalAmount:
        type: number
        description: Total amount for the Transaction.
        example: 120
        multipleOf: 0.01
        minimum: 0.01
        maximum: 1000000
      currencyCode:
        type: string
        minLength: 3
        maxLength: 3
        description: Currency used to purchase the item. ISO 4217 codes for the representation of currencies and funds.
        example: HKD
        enum:
          - HKD
      appSuccessCallback:
        type: string
        description: 'If applicable, URL that the user will be redirected to when payment finishes successfully.'
        example: 'https://example.com/confirmation'
        maxLength: 255
      appFailCallback:
        type: string
        description: 'If applicable, URL that the user will be redirected to when the payment fails.'
        example: 'https://example.com/unsuccessful'
        maxLength: 255
      createdTime:
        type: string
        format: date-time
        description: Date and time when the request is created.
        example: '2018-07-25T02:26:07Z'
      effectiveDuration:
        type: integer
        description: Expiry value in seconds of the payment request.
        example: 30
        minimum: 15
        maximum: 3600
      statusDescription:
        type: string
        description: Payment request status.
        example: Payment Success
        maxLength: 1024
        enum:
          - Request for Payment Initiated
          - Payment Success
          - Payment Request Expired
      statusCode:
        type: string
        description: 'Status code depicting the status returned. (PR001 = Active, PR005 = Completed, PR007 = Expired)'
        example: PR005
        enum:
          - PR001
          - PR005
          - PR007
      transactions:
        type: array
        description: 'List of purchase transaction detail realated to this paymentRequest, will be empty if no transactions exist.'
        items:
          $ref: '#/definitions/GetPaymentRequestTransactionModel'
  RefundInputModel:
    type: object
    required:
      - amount
      - currencyCode
      - reasonCode
      - reasonMessage
    properties:
      amount:
        type: number
        multipleOf: 0.01
        minimum: 0.01
        maximum: 1000000
        description: The amount to be refunded. This can be partial or equal to original transaction amount. It can not be more than the original transaction.
        example: 120.03
      currencyCode:
        type: string
        minLength: 3
        maxLength: 3
        description: Transaction currency code. ISO 4217 codes for the representation of currencies and funds.
        example: HKD
        enum:
          - HKD
      reasonCode:
        type: string
        maxLength: 2
        minLength: 2
        description: 'Refund reason codes: <br>"00": "Other" <br>"01": "Product or service quality" <br>"02": "Incorrect size" <br>"03": "Incorrect product delivered" <br>"04": "Product did not match expectations" <br>"05": "Customer does not need it anymore" <br> If reasonCode is "00" a custom reasonMessage can be supplied in the request'
        enum:
          - '00'
          - '01'
          - '02'
          - '03'
          - '04'
          - '05'
        example: '00'
      reasonMessage:
        type: string
        maxLength: 140
        description: The reason for the refund.
        example: Damaged stock returned to store
  RefundOutputModel:
    type: object
    required:
      - refundId
      - transactionId
      - payerId
      - refundAmount
      - refundCurrencyCode
      - feeAmount
      - feeCurrencyCode
      - reasonCode
      - reasonMessage
    properties:
      refundId:
        type: string
        description: Unique Identifier for the refund. *value is generated by the API*
        pattern: '([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}){1}'
        format: uuid
      transactionId:
        type: string
        description: 'The id of the transaction to be refunded, not required if the transaction object is included.'
        pattern: '([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}){1}'
        format: uuid
      payerId:
        type: string
        maxLength: 22
        minLength: 22
        description: The id of the PayMe customer who will receive the funds as a result of the refund.
        example: CA1234765
      refundAmount:
        type: number
        multipleOf: 0.01
        minimum: 0.01
        maximum: 1000000
        description: Transaction amount to be refunded. It can not be more than original transaction amount.
        example: 120.03
      refundCurrencyCode:
        type: string
        minLength: 3
        maxLength: 3
        description: Transaction currency code. ISO 4217 codes for the representation of currencies and funds.
        example: HKD
      feeAmount:
        type: number
        multipleOf: 0.01
        minimum: 0.01
        maximum: 1000000
        description: Fee amount that will be refunded.
        example: 120.03
      feeCurrencyCode:
        type: string
        maxLength: 3
        description: Fee currency code. ISO 4217 codes for the representation of currencies and funds.
        example: HKD
      reasonCode:
        type: string
        minLength: 2
        maxLength: 2
        description: 'Refund reason codes: <br>"00", "Other" <br>"01", "Product or service quality" <br>"02", "Incorrect size" <br>"03", "Incorrect product delivered" <br>"04", "Product did not match expectations" <br>"05", "Customer does not need it anymore" <br> If reasonCode is "00" a custom reasonMessage can be supplied in the request'
        enum:
          - '00'
          - '01'
          - '02'
          - '03'
          - '04'
          - '05'
        example: '00'
      reasonMessage:
        type: string
        maxLength: 140
        description: The reason for the refund.
        example: Damaged stock returned to store
  CancelPaymentRequestOutputModel:
    type: object
    required:
      - paymentRequestId
      - status
    properties:
      paymentRequestId:
        type: string
        description: Unique Identifier for the Payment entry. This can be used subsequent calls like get payment request.
        example: 1f0e8bb9-6a75-422a-9533-e5b991fc235c
      statusCode:
        type: string
        description: 'Status code depicting the status returned. (PR001 = Active, PR004 = Aborted, PR005 = Completed, PR007 = Expired)'
        example: PR004
      statusDescription:
        type: string
        description: QRCode Status Description.
        example: Request for Payment Rejected
  GetPaymentRequestTransactionModel:
    type: object
    required:
      - transactionId
      - transactionType
      - transactionTime
      - transactionSource
    properties:
      transactionId:
        type: string
        description: Unique ID used to identify an individual transaction.
      transactionSource:
        type: string
        maxLength: 3
        description: Transaction source (e.g. 005)
      transactionSourceDescription:
        type: string
        maxLength: 20
        description: Transaction source (e.g. Online)
      transactionType:
        type: string
        maxLength: 3
        description: 'Code of transaction type: <br/> "003": "Collect payment" <br/> "004": "Refund" <br/> "006": "Bank Transfer" <br/> "014": "Adjustment"'
        example: '004'
      transactionTypeDescription:
        type: string
        maxLength: 20
        description: 'Description of transaction type: <br/> "003" : "Collect payment" <br/> "004" : "Refund" <br/> "006" : "Bank Transfer" <br/> "014" : "Adjustment"'
        example: Refund
      transactionTime:
        type: string
        format: date-time
        description: Date and time when the request is created.
        example: '2018-07-25T02:26:07Z'
      feeAmount:
        type: number
        multipleOf: 0.01
        minimum: 0.01
        maximum: 1000000
        description: Fee amount that has been charged on transaction.
        example: 120.03
      orderDescription:
        type: string
        maxLength: 140
        description: 'Order description, associated with the transaction.'
      orderId:
        type: string
        maxLength: 60
        description: Merchant order id.
  ErrorDetailModel:
    type: object
    properties:
      errorCode:
        type: string
        description: Error code of the error returned from the server.
      errorDescription:
        type: string
        description: Detailed Error Description.
  ErrorModel:
    type: object
    properties:
      message:
        description: The detailed reason for the ERROR.
        type: string
      errors:
        description: Detailed description for the error with error code.
        type: array
        items:
          $ref: '#/definitions/ErrorDetailModel'
tags: []
